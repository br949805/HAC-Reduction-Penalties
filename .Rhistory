xyplot(~ dataNoNa$steps | dataNoNa$wkEnd, data=dataNoNa, layout=c(1,2))
xyplot(dataNoNa$steps ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, layout=c(1,2))
dataNoNa$weekday <- sapply(as.Date(dataNoNa$date), weekdays)
dataNoNa$weekday <- as.factor(dataNoNa$weekday)
wkEndDays <- c("Sunday","Saturday")
dataNoNa$wkEnd <- ifelse(dataNoNa$weekday %in% wkEndDays,"WeekEnd","WeekDays")
dataNoNa$wkEnd <- as.factor(dataNoNa$wkEnd)
agg_wkdays <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="WeekDays"), FUN=mean, na.rm=T)
agg_wkEnd <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="WeekEnd"), FUN=mean, na.rm=T)
xyplot(dataNoNa$steps ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, layout=c(1,2))
wkEndDays <- c("Sunday","Saturday")
dataNoNa$wkEnd <- ifelse(dataNoNa$weekday %in% wkEndDays,"Weekend","Weekdays")
dataNoNa$wkEnd <- as.factor(dataNoNa$wkEnd)
agg_wkdays <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="Weekdays"), FUN=mean, na.rm=T)
agg_wkEnd <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="Weekend"), FUN=mean, na.rm=T)
xyplot(dataNoNa$steps ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, layout=c(1,2))
wkEndDays <- c("Sunday","Saturday")
dataNoNa$wkEnd <- ifelse(dataNoNa$weekday %in% wkEndDays,"Weekend","Weekday")
dataNoNa$wkEnd <- as.factor(dataNoNa$wkEnd)
agg_wkdays <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="Weekday"), FUN=mean, na.rm=T)
agg_wkEnd <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="Weekend"), FUN=mean, na.rm=T)
xyplot(dataNoNa$steps ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, layout=c(1,2))
agg_wkdays <- aggregate(steps ~ interval | wkEnd, data=dataNoNa, FUN=mean, na.rm=T)
agg_wkdays <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="Weekday"), FUN=mean, na.rm=T)
View(agg_wkdays)
xyplot(dataNoNa$steps ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, type="l", layout=c(1,2))
xyplot(mean(dataNoNa$steps) ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, type="l", layout=c(1,2))
xyplot(dataNoNa$steps ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, type="l", layout=c(1,2))
xyplot(agg_wkdaysa$steps ~ agg_wkdays$interval | dataNoNa$wkEnd, data=dataNoNa, type="l", layout=c(1,2))
xyplot(agg_wkdays$steps ~ agg_wkdays$interval | dataNoNa$wkEnd, data=dataNoNa, type="l", layout=c(1,2))
xyplot(agg_wkdays$steps ~ agg_wkdays$interval | dataNoNa$wkEnd, data=agg_wkdays, type="l", layout=c(1,2))
xyplot(dataNoNa$steps ~ dataNoNa$interval | dataNoNa$wkEnd, data=dataNoNa, type="l", layout=c(1,2))
View(agg_wkEnd)
agg_wkdays$wkEnd <- 0
agg_wkdays$wkEnd <- 1
agg_tot <- rbind(agg_wkdays,agg_wkEnd)
agg_wkEnd <- aggregate(steps ~ interval, data=subset(dataNoNa,wkEnd=="Weekend"), FUN=mean, na.rm=T)
agg_wkdays$wkEnd <- 1
View(agg_wkEnd)
agg_wkEnd$wkEnd <- 1
agg_tot <- rbind(agg_wkdays,agg_wkEnd)
View(agg_tot)
xyplot(steps ~ interval | wkEnd, data=agg_tot, type="l", layout=c(1,2))
View(agg_tot)
xyplot(agg_tot$steps ~ agg_tot$interval | agg_tot$wkEnd, data=agg_tot, type="l", layout=c(1,2))
xyplot(agg_tot$steps ~ agg_tot$interval | agg_tot$wkEnd, data=agg_tot, type="l", layout=c(1,2), main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab"Number of Steps")
xyplot(agg_tot$steps ~ agg_tot$interval | agg_tot$wkEnd, data=agg_tot, type="l", layout=c(1,2), main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab="Number of Steps")
xyplot(agg_tot$steps ~ agg_tot$interval | wkEnd, data=agg_tot, type="l", layout=c(1,2), main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab="Number of Steps")
plot1 <- xyplot(agg_wkdays$steps ~ agg_wkdays$interval, data=agg_wkdays, type="l", main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab="Number of Steps")
plot2 <- xyplot(agg_wkEnd$steps ~ agg_wkEnd$interval, data=agg_wkEnd, type="l")"
plot2 <- xyplot(agg_wkEnd$steps ~ agg_wkEnd$interval, data=agg_wkEnd, type="l")
library(latticeExtra)
plot1+plot2
install.packages("latticeExtra")
library("latticeExtra", lib.loc="C:/Users/broberson/Documents/R/win-library/3.0")
library(latticeExtra)
plot1+plot2
plot1 <- xyplot(agg_wkdays$steps ~ agg_wkdays$interval, data=agg_wkdays, type="l",col="red" main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab="Number of Steps")
plot1+plot2
plot1 <- xyplot(agg_wkdays$steps ~ agg_wkdays$interval, data=agg_wkdays, type="l",col="red" main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab="Number of Steps")
plot2 <- xyplot(agg_wkEnd$steps ~ agg_wkEnd$interval, data=agg_wkEnd, type="l")
library(latticeExtra)
plot1+plot2
plot1 <- xyplot(agg_wkdays$steps ~ agg_wkdays$interval, data=agg_wkdays, type="l",col="red" main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab="Number of Steps")
plot2 <- xyplot(agg_wkEnd$steps ~ agg_wkEnd$interval, data=agg_wkEnd, type="l")
library(latticeExtra)
plot1+plot2
agg_tot$wkEnd <- as.factor(agg_tot$wkEnd)
xyplot(agg_tot$steps ~ agg_tot$interval | wkEnd, data=agg_tot, type="l", layout=c(1,2), main="Weekend vs Weekday: Number of Steps", xlab="Interval", ylab="Number of Steps")
library(lattice)
library(RCurl)
x <- getURL("https://github.com/br949805/RepData_PeerAssessment1/raw/master/activity.csv",
ssl.verifypeer=0L, followlocation=1L)
data <- read.csv(text=x)
rm(x)
agg <- aggregate(steps ~ date, data=data, FUN=sum, na.rm=T)
hist(agg$steps, main="Distribution of Steps Per Day", xlab= "Steps Per Day")
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/GIT Repos/HAC Reduction Penalties")
library(RODBC)
library(seqinr)
library(gmodels)
#Connect to SQL Databases and read in data
con <- odbcConnect("AHA",uid="SASUser", pwd="EHI1301a")
aha <- sqlQuery(con,"select t1.ID,MNAME, MCRNUM, MAPP8, MAPP5, t2.HOSPBD  from AS12DEM t1 inner join as12svc1 t2 on t1.id = t2.id")
odbcClose(con)
rm(con)
con <- odbcConnect("MemberList",uid="SASUser", pwd="EHI1301a")
mem <- sqlQuery(con,"select * from AEH_Current_Members")
odbcClose(con)
rm(con)
con <- odbcConnect("IPPSData",uid="SASUser", pwd="EHI1301a")
cmi <- sqlQuery(con,"select PROVIDER_NUMBER, HOSPITAL, TACMIV31 from FY2014IMPACT")
odbcClose(con)
rm(con)
#Read in HAC_Data.csv; rename matching variables in data frames
names(aha) <- c("ID","MNAME","PROVIDER_NUMBER", "MAPP8", "MAPP5", "HOSPBD")
aha$bed.size <- ifelse(aha$HOSPBD >= 400,1,0)
hac <- read.csv("HAC_Data.csv")
names(hac) <- c("PROVIDER_NUMBER","PENALIZED", "SCORE")
mem <- as.data.frame(mem[,c("MCRNUM","MNAME")])
names(mem) <- c("PROVIDER_NUMBER","MNAME")
#Merge data frames
cmi_hac <- merge(hac, cmi, by="PROVIDER_NUMBER")
cmi_hac_aha <- merge(cmi_hac, aha, by="PROVIDER_NUMBER")
#Recode PENALIZED Variable
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$PENALIZED[i] == "Y"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 1
} else if(cmi_hac_aha$PENALIZED[i] == "N"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 0
} else {
cmi_hac_aha$PENALIZED.BINARY[i] <- NA
}
}
#Recode MAPP8 and MAPP5
cmi_hac_aha$MAPP8.BINARY <- ifelse(cmi_hac_aha$MAPP8 == 2,0,1)
cmi_hac_aha$MAPP5.BINARY <- ifelse(cmi_hac_aha$MAPP5 == 2,0,1)
cmi_hac_aha$Test.Set <- sample(0:1,nrow(cmi_hac_aha), replace=TRUE)
#Combine as Teaching
cmi_hac_aha$TEACHING <- ifelse(cmi_hac_aha$MAPP8.BINARY == 1,1,0)
View(cmi_hac_aha)
table(cmi_hac_aha$bed.size, cmi_hac_aha$PENALIZED.BINARY)
cmi_hac_aha$bed.size.text <- ifelse(cmi_hac_aha$bed.size == 1,">= 400 Beds","< 400 Beds")
boxplot(cmi_hac_aha$SCORE ~ cmi_hac_aha$bed.size.text, main="Hospitals Size vs Total HAC Score", ylab="Scores")
abline(h=7, col="red")
text(c(0,6.05),paste("Median: ",median(cmi_hac_aha$SCORE[cmi_hac_aha$bed.size == 1],)))
text(4.85,paste("Median: ",median(cmi_hac_aha$SCORE[cmi_hac_aha$bed.size == 0],)))
rect(0,7,4,11, col=col2alpha("red", alpha = 0.2))
text(1.5,9,"Penalized", cex=1.5)
cmi_hac_aha$TEACHING <- ifelse(cmi_hac_aha$MAPP8.BINARY == 1 ,"Teaching","Other")
boxplot(cmi_hac_aha$SCORE ~ cmi_hac_aha$TEACHING,  main="Teaching Status vs Total HAC Score", ylab="Scores")
abline(h=7, col="red")
text(c(0,6.7),paste("Median: ",median(cmi_hac_aha$SCORE[cmi_hac_aha$TEACHING == "Teaching"],)))
text(4.85,paste("Median: ",median(cmi_hac_aha$SCORE[cmi_hac_aha$TEACHING ==  "Other"],)))
rect(0,7,4,11, col=col2alpha("red", alpha = 0.2))
text(1.5,9,"Penalized", cex=1.5)
boxplot(cmi_hac_aha$SCORE ~ cmi_hac_aha$MEMBER, main="Member vs Non-Member Total HAC Score", ylab="Scores")
abline(h=7, col="red")
text(c(0,5),paste("Median: ",median(cmi_hac_aha$SCORE[cmi_hac_aha$MEMBER == "NON-MEMBER"],)))
text(6.7,paste("Median: ",median(cmi_hac_aha$SCORE[cmi_hac_aha$MEMBER == "MEMBER"],)))
rect(0,7,4,11, col=col2alpha("red", alpha = 0.2))
text(1.5,9,"Penalized", cex=1.5)
setwd("~/GIT Repos/HAC Reduction Penalties")
library(RODBC)
library(seqinr)
library(gmodels)
#Connect to SQL Databases and read in data
con <- odbcConnect("AHA",uid="SASUser", pwd="EHI1301a")
aha <- sqlQuery(con,"select t1.ID,MNAME, MCRNUM, MAPP8, MAPP5, t2.HOSPBD  from AS12DEM t1 inner join as12svc1 t2 on t1.id = t2.id")
odbcClose(con)
rm(con)
con <- odbcConnect("MemberList",uid="SASUser", pwd="EHI1301a")
mem <- sqlQuery(con,"select * from AEH_Current_Members")
odbcClose(con)
rm(con)
con <- odbcConnect("IPPSData",uid="SASUser", pwd="EHI1301a")
cmi <- sqlQuery(con,"select PROVIDER_NUMBER, HOSPITAL, TACMIV31 from FY2014IMPACT")
odbcClose(con)
rm(con)
#Read in HAC_Data.csv; rename matching variables in data frames
names(aha) <- c("ID","MNAME","PROVIDER_NUMBER", "MAPP8", "MAPP5", "HOSPBD")
aha$bed.size <- ifelse(aha$HOSPBD >= 400,1,0)
hac <- read.csv("HAC_Data.csv")
names(hac) <- c("PROVIDER_NUMBER","PENALIZED", "SCORE")
mem <- as.data.frame(mem[,c("MCRNUM","MNAME")])
names(mem) <- c("PROVIDER_NUMBER","MNAME")
#Merge data frames
cmi_hac <- merge(hac, cmi, by="PROVIDER_NUMBER")
cmi_hac_aha <- merge(cmi_hac, aha, by="PROVIDER_NUMBER")
#Recode PENALIZED Variable
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$PENALIZED[i] == "Y"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 1
} else if(cmi_hac_aha$PENALIZED[i] == "N"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 0
} else {
cmi_hac_aha$PENALIZED.BINARY[i] <- NA
}
}
#Recode MAPP8 and MAPP5
cmi_hac_aha$MAPP8.BINARY <- ifelse(cmi_hac_aha$MAPP8 == 2,0,1)
cmi_hac_aha$MAPP5.BINARY <- ifelse(cmi_hac_aha$MAPP5 == 2,0,1)
cmi_hac_aha$Test.Set <- sample(0:1,nrow(cmi_hac_aha), replace=TRUE)
#Combine as Teaching
cmi_hac_aha$TEACHING <- ifelse(cmi_hac_aha$MAPP8.BINARY == 1,1,0)
View(cmi_hac_aha)
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$TACMIV31[i] >= 1.664){
cmi_hac_aha$CMI.TIER.TOP[i] <- 1
}  else {
cmi_hac_aha$CMI.TIER.TOP[i] <- 0
}
}
View(cmi_hac_aha)
table(cmi_hac_aha$CMI.TIER.TOP, cmi_hac_aha$bed.size)
table(cmi_hac_aha$CMI.TIER.TOP)
library("RSQLite", lib.loc="~/R/win-library/3.0")
library("sqldf", lib.loc="~/R/win-library/3.0")
sqldf("select avg(TACMIV31) from cmi_hac_aha where bed.size = 1")
sqldf("select avg(TACMIV31) from cmi_hac_aha")
sqldf("select avg(TACMIV31) from cmi_hac_aha where TEACHING = 1")
sqldf("select avg(TACMIV31) from cmi_hac_aha where TEACHING = 0")
View(cmi_hac_aha)
sqldf("select avg(TACMIV31) from cmi_hac_aha where bed_size = 1")
sqldf("select avg(TACMIV31) from cmi_hac_aha where bed_size = 0")
cmi_hac_aha$MEMBER <- ifelse(cmi_hac_aha$PROVIDER_NUMBER %in% mem$PROVIDER_NUMBER,"MEMBER","NON-MEMBER")
sqldf("select avg(TACMIV31) from cmi_hac_aha where MEMBER = "MEMBER")
sqldf("select avg(TACMIV31) from cmi_hac_aha where MEMBER = 'MEMBER')
)
sqldf("select avg(TACMIV31) from cmi_hac_aha where MEMBER = 'MEMBER'")
sqldf("select avg(TACMIV31) from cmi_hac_aha where MEMBER = 'NON-MEMBER'")
hist(cmi_hac_aha$TACMIV31)
sd(cmi_hac_aha$TACMIV31)
x <- subset(cmi_hac_aha, MEMBER = 'MEMBER', select = c(TACMIV31))
View(x)
x <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
mem <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
end <- rbind(mem, size, t)
ggplot(end, aes(length, fill = veg)) + geom_density(alpha = 0.2)
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.0")
ggplot(end, aes(length, fill = veg)) + geom_density(alpha = 0.2)
ggplot(end) + geom_density(alpha = 0.2)
carrots <- data.frame(length = rnorm(100000, 6, 2))
cukes <- data.frame(length = rnorm(50000, 7, 2.5))
#Now, combine your two dataframes into one.  First make a new column in each.
carrots$veg <- 'carrot'
cukes$veg <- 'cuke'
#and combine into your new data frame vegLengths
vegLengths <- rbind(carrots, cukes)
#now make your lovely plot
ggplot(vegLengths, aes(length, fill = veg)) + geom_density(alpha = 0.2)
View(carrots)
View(aha)
View(cukes)
View(vegLengths)
View(end)
View(vegLengths)
mem <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
mem$type <- 'MEM'
size$type <- 'LARGE'
t$type <- 'TEACH'
end <- rbind(mem, size, t)
View(end)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2)
abline(v=1.45, col="red")
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45)
mem <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
mem$type <- 'America\'s Essential Hospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
end <- rbind(mem, size, t)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45)
mem$type <- 'America\'s\nEssential Hospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
end <- rbind(mem, size, t)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45)
mem$type <- 'America\'s Essential\nHospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
end <- rbind(mem, size, t)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Acuity")
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index")
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=1.5,y=2.2,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=1,y=2.2,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.7,y=2.2,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.8,y=2.2,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=2.2,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=2,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = 1.45) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=1.9,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=1.9,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(end$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=1.9,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=1.9,label="National Average",hjust=0)
con <- odbcConnect("IPPSData",uid="SASUser", pwd="EHI1301a")
cmi <- sqlQuery(con,"select PROVIDER_NUMBER, HOSPITAL, TACMIV31, DSHPCT from FY2014IMPACT")
odbcClose(con)
rm(con)
#Read in HAC_Data.csv; rename matching variables in data frames
names(aha) <- c("ID","MNAME","PROVIDER_NUMBER", "MAPP8", "MAPP5", "HOSPBD")
aha$bed.size <- ifelse(aha$HOSPBD >= 400,1,0)
hac <- read.csv("HAC_Data.csv")
names(hac) <- c("PROVIDER_NUMBER","PENALIZED", "SCORE")
mem <- as.data.frame(mem[,c("MCRNUM","MNAME")])
names(mem) <- c("PROVIDER_NUMBER","MNAME")
#Merge data frames
cmi_hac <- merge(hac, cmi, by="PROVIDER_NUMBER")
cmi_hac_aha <- merge(cmi_hac, aha, by="PROVIDER_NUMBER")
#Recode PENALIZED Variable
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$PENALIZED[i] == "Y"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 1
} else if(cmi_hac_aha$PENALIZED[i] == "N"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 0
} else {
cmi_hac_aha$PENALIZED.BINARY[i] <- NA
}
}
#Recode MAPP8 and MAPP5
cmi_hac_aha$MAPP8.BINARY <- ifelse(cmi_hac_aha$MAPP8 == 2,0,1)
cmi_hac_aha$MAPP5.BINARY <- ifelse(cmi_hac_aha$MAPP5 == 2,0,1)
cmi_hac_aha$Test.Set <- sample(0:1,nrow(cmi_hac_aha), replace=TRUE)
#Combine as Teaching
cmi_hac_aha$TEACHING <- ifelse(cmi_hac_aha$MAPP8.BINARY == 1,1,0)
View(cmi_hac_aha)
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$DSHPCT[i] >= mean(cmi_hac_aha$DSHPCT)){
cmi_hac_aha$DSH.TIER.TOP[i] <- 1
}  else {
cmi_hac_aha$DSH.TIER.TOP[i] <- 0
}
}
View(cmi_hac_aha)
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$DSHPCT[i] >= quantile(cmi_hac_aha$DSHPCT, .75) ){
cmi_hac_aha$DSH.TIER.TOP[i] <- 1
}  else {
cmi_hac_aha$DSH.TIER.TOP[i] <- 0
}
}
View(cmi_hac_aha)
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
583/(583+234)
234/(583+234)
509/(509+1937)
plot(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
plot(cmi_hac_aha$DSH.TIER.TOP~ cmi_hac_aha$PENALIZED.BINARY)
plot(cmi_hac_aha$DSHPCT~ cmi_hac_aha$SCORE)
plot(jitter(cmi_hac_aha$DSHPCT)~ cmi_hac_aha$SCORE)
plot(jitter(cmi_hac_aha$DSHPCT)~ jitter(cmi_hac_aha$SCORE))
plot(cmi_hac_aha$DSHPCT~ cmi_hac_aha$SCORE)
chisq.test(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
chisq.test(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$CMI.TIER.TOP)
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$CMI.TIER.TOP)
View(cmi_hac_aha)
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$TACMIV31[i] >= 1.664){
cmi_hac_aha$CMI.TIER.TOP[i] <- 1
}  else {
cmi_hac_aha$CMI.TIER.TOP[i] <- 0
}
}
chisq.test(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$CMI.TIER.TOP)
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$CMI.TIER.TOP)
c <- subset(cmi_hac_aha, CMI.TOP.TIER == 1, select = c(TACMIV31))
c <- subset(cmi_hac_aha, CMI.TIER.TOP== 1, select = c(TACMIV31))
c$type <- 'High Acuity'
end <- rbind(mem, size, t,c)
View(c)
View(t)
View(x)
View(c)
View(size)
end <- rbind(mem, size, t, c)
names(end)
names(c)
names(x)
names(mem)
mem <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
cmi_hac_aha$MEMBER <- ifelse(cmi_hac_aha$PROVIDER_NUMBER %in% mem$PROVIDER_NUMBER,"MEMBER","NON-MEMBER")
mem <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
c <- subset(cmi_hac_aha, CMI.TIER.TOP== 1, select = c(TACMIV31))
mem$type <- 'America\'s Essential\nHospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
View(mem)
cmi_hac_aha$MEMBER <- ifelse(cmi_hac_aha$PROVIDER_NUMBER %in% mem$PROVIDER_NUMBER,"MEMBER","NON-MEMBER")
View(cmi_hac_aha)
setwd("~/GIT Repos/HAC Reduction Penalties")
library(RODBC)
library(seqinr)
library(gmodels)
#Connect to SQL Databases and read in data
con <- odbcConnect("AHA",uid="SASUser", pwd="EHI1301a")
aha <- sqlQuery(con,"select t1.ID,MNAME, MCRNUM, MAPP8, MAPP5, t2.HOSPBD  from AS12DEM t1 inner join as12svc1 t2 on t1.id = t2.id")
odbcClose(con)
rm(con)
con <- odbcConnect("MemberList",uid="SASUser", pwd="EHI1301a")
mem <- sqlQuery(con,"select * from AEH_Current_Members")
odbcClose(con)
rm(con)
con <- odbcConnect("IPPSData",uid="SASUser", pwd="EHI1301a")
cmi <- sqlQuery(con,"select PROVIDER_NUMBER, HOSPITAL, TACMIV31, DSHPCT from FY2014IMPACT")
odbcClose(con)
rm(con)
#Read in HAC_Data.csv; rename matching variables in data frames
names(aha) <- c("ID","MNAME","PROVIDER_NUMBER", "MAPP8", "MAPP5", "HOSPBD")
aha$bed.size <- ifelse(aha$HOSPBD >= 400,1,0)
hac <- read.csv("HAC_Data.csv")
names(hac) <- c("PROVIDER_NUMBER","PENALIZED", "SCORE")
mem <- as.data.frame(mem[,c("MCRNUM","MNAME")])
names(mem) <- c("PROVIDER_NUMBER","MNAME")
#Merge data frames
cmi_hac <- merge(hac, cmi, by="PROVIDER_NUMBER")
cmi_hac_aha <- merge(cmi_hac, aha, by="PROVIDER_NUMBER")
#Recode PENALIZED Variable
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$PENALIZED[i] == "Y"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 1
} else if(cmi_hac_aha$PENALIZED[i] == "N"){
cmi_hac_aha$PENALIZED.BINARY[i] <- 0
} else {
cmi_hac_aha$PENALIZED.BINARY[i] <- NA
}
}
#Recode MAPP8 and MAPP5
cmi_hac_aha$MAPP8.BINARY <- ifelse(cmi_hac_aha$MAPP8 == 2,0,1)
cmi_hac_aha$MAPP5.BINARY <- ifelse(cmi_hac_aha$MAPP5 == 2,0,1)
cmi_hac_aha$Test.Set <- sample(0:1,nrow(cmi_hac_aha), replace=TRUE)
#Combine as Teaching
cmi_hac_aha$TEACHING <- ifelse(cmi_hac_aha$MAPP8.BINARY == 1,1,0)
cmi_hac_aha$MEMBER <- ifelse(cmi_hac_aha$PROVIDER_NUMBER %in% mem$PROVIDER_NUMBER,"MEMBER","NON-MEMBER")
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$TACMIV31[i] >= 1.664){
cmi_hac_aha$CMI.TIER[i] <- 4
} else if(cmi_hac_aha$TACMIV31[i] >= 1.460){
cmi_hac_aha$CMI.TIER[i] <- 3
} else if(cmi_hac_aha$TACMIV31[i] >= 1.269){
cmi_hac_aha$CMI.TIER[i] <- 2
} else {
cmi_hac_aha$CMI.TIER[i] <- 1
}
}
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$TACMIV31[i] >= 1.664){
cmi_hac_aha$CMI.TIER.TOP[i] <- 1
}  else {
cmi_hac_aha$CMI.TIER.TOP[i] <- 0
}
}
m <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
c <- subset(cmi_hac_aha, CMI.TIER.TOP== 1, select = c(TACMIV31))
mem$type <- 'America\'s Essential\nHospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
c$type <- 'High Acuity'
end <- rbind(m, size, t, c)
m$type <- 'America\'s Essential\nHospitals Members'
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$DSHPCT[i] >= quantile(cmi_hac_aha$DSHPCT, .75) ){
cmi_hac_aha$DSH.TIER.TOP[i] <- 1
}  else {
cmi_hac_aha$DSH.TIER.TOP[i] <- 0
}
}
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
plot(cmi_hac_aha$DSHPCT~ cmi_hac_aha$SCORE)
chisq.test(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
chisq.test(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$CMI.TIER.TOP)
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$CMI.TIER.TOP)
for(i in 1:nrow(cmi_hac_aha)) {
if(cmi_hac_aha$DSHPCT[i] >= quantile(cmi_hac_aha$DSHPCT, .75) ){
cmi_hac_aha$DSH.TIER.TOP[i] <- 1
}  else {
cmi_hac_aha$DSH.TIER.TOP[i] <- 0
}
}
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
plot(cmi_hac_aha$DSHPCT~ cmi_hac_aha$SCORE)
chisq.test(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
table(cmi_hac_aha$DSH.TIER.TOP, cmi_hac_aha$PENALIZED.BINARY)
m <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
c <- subset(cmi_hac_aha, CMI.TIER.TOP== 1, select = c(TACMIV31))
m$type <- 'America\'s Essential\nHospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
c$type <- 'High Acuity'
end <- rbind(m, size, t, c)
names(mem)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=1.9,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.9,y=1.7,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.5,y=1.9,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.8,y=1.9,label="National Average",hjust=0)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.8,y=1.9,label="National Average",hjust=0)
m <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
c <- subset(cmi_hac_aha, CMI.TIER.TOP== 1, select = c(TACMIV31))
m$type <- 'America\'s Essential\nHospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
c$type <- 'High Acuity'
end <- rbind(m, size, )
names(mem)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.8,y=1.9,label="National Average",hjust=0)
m <- subset(cmi_hac_aha, MEMBER == 'MEMBER', select = c(TACMIV31))
size <- subset(cmi_hac_aha, bed.size == 1, select = c(TACMIV31))
t <- subset(cmi_hac_aha, TEACHING == 1, select = c(TACMIV31))
c <- subset(cmi_hac_aha, CMI.TIER.TOP== 1, select = c(TACMIV31))
m$type <- 'America\'s Essential\nHospitals Members'
size$type <- '> 400 Beds'
t$type <- 'Teaching Hospitals'
c$type <- 'High Acuity'
end <- rbind(m, size, t)
names(mem)
ggplot(end, aes(TACMIV31, fill = type)) + geom_density(alpha = 0.2) + geom_vline(xintercept = mean(cmi_hac_aha$TACMIV31)) + xlab("Transfer Adjusted Case-Mix Index") + annotate("text",x=0.8,y=1.9,label="National Average",hjust=0)
